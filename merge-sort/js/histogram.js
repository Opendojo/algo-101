// Generated by CoffeeScript 1.8.0
var Histo, histogram;

histogram = (function() {
  function histogram() {
    this.init();
    this.initSVG();
  }

  histogram.prototype.init = function() {
    this.values = d3.range(1000).map(d3.random.bates(10));
  };

  histogram.prototype.initSVG = function() {
    var bar, formatCount, height, margin, svg, width, x, xAxis, y;
    formatCount = d3.format(",.0f");
    margin = {
      top: 10,
      right: 30,
      bottom: 30,
      left: 30
    };
    width = 960 - margin.left - margin.right;
    height = 500 - margin.top - margin.bottom;
    x = d3.scale.linear().domain([0, 1]).range([0, width]);
    this.data = d3.layout.histogram().bins(x.ticks(20))(this.values);
    y = d3.scale.linear().domain([
      0, d3.max(this.data, function(d) {
        return d.y;
      })
    ]).range([height, 0]);
    xAxis = d3.svg.axis().scale(x).orient("bottom");
    svg = d3.select("body").append("svg").attr("width", width + margin.left + margin.right).attr("height", height + margin.top + margin.bottom).append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");
    bar = svg.selectAll(".bar").data(this.data).enter().append("g").attr("class", "bar").attr("transform", function(d) {
      return "translate(" + x(d.x) + "," + y(d.y) + ")";
    });
    bar.append("rect").attr("x", 1).attr("width", x(this.data[0].dx) - 1).attr("height", function(d) {
      return height - y(d.y);
    });
    bar.append("text").attr("dy", ".75em").attr("y", 6).attr("x", x(this.data[0].dx) / 2).attr("text-anchor", "middle").text(function(d) {
      return formatCount(d.y);
    });
    svg.append("g").attr("class", "x axis").attr("transform", "translate(0," + height + ")").call(xAxis);
  };

  return histogram;

})();

Histo = new histogram();

//# sourceMappingURL=histogram.js.map
